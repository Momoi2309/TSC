# do run.do run_test.bat 11 0 7777 run_test5.bat
# 1
# Model Technology ModelSim SE-64 vlog 10.6d Compiler 2018.02 Feb 24 2018
# Start time: 19:08:54 on Apr 24,2023
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 19:08:54 on Apr 24,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -G/top/test/test_name=run_test5.bat -G/top/test/seed=7777 -G/top/test/Number_of_Transaction=11 -G/top/test/RND_CASE=0 
# Start time: 19:08:54 on Apr 24,2023
# ** Warning: (vsim-8891) All optimizations are turned off because the -novopt switch is in effect. This will cause your simulation to run very slowly. If you are using this switch to preserve visibility for Debug or PLI features please see the User's Manual section on Preserving Object Visibility with vopt.
# //  ModelSim SE-64 10.6d Feb 24 2018
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim SE-64 and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Refreshing C:/Users/momoi/OneDrive/Desktop/TSC-main/TSC-main/lab6/sim/work.top
# Refreshing C:/Users/momoi/OneDrive/Desktop/TSC-main/TSC-main/lab6/sim/work.instr_register_pkg
# Refreshing C:/Users/momoi/OneDrive/Desktop/TSC-main/TSC-main/lab6/sim/work.instr_register_test
# Refreshing C:/Users/momoi/OneDrive/Desktop/TSC-main/TSC-main/lab6/sim/work.instr_register
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
#  test_name = run_test5.bat
# 
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# Writing to register location 1: 
#   opcode = 1 (SQUARE)
#   operand_a = 4
#   operand_b = 1
# 
# Writing to register location 2: 
#   opcode = 5 (MULT)
#   operand_a = -13
#   operand_b = 13
# 
# Writing to register location 3: 
#   opcode = 1 (SQUARE)
#   operand_a = -11
#   operand_b = 2
# 
# Writing to register location 4: 
#   opcode = 5 (MULT)
#   operand_a = 13
#   operand_b = 6
# 
# Writing to register location 5: 
#   opcode = 1 (SQUARE)
#   operand_a = 13
#   operand_b = 12
# 
# Writing to register location 6: 
#   opcode = 2 (PASSB)
#   operand_a = -10
#   operand_b = 5
# 
# Writing to register location 7: 
#   opcode = 2 (PASSB)
#   operand_a = 5
#   operand_b = 7
# 
# Writing to register location 8: 
#   opcode = 6 (DIV)
#   operand_a = 15
#   operand_b = 2
# 
# Writing to register location 9: 
#   opcode = 4 (SUB)
#   operand_a = -8
#   operand_b = 5
# 
# Writing to register location 10: 
#   opcode = 5 (MULT)
#   operand_a = -3
#   operand_b = 13
# 
# Writing to register location 11: 
#   opcode = 0 (ZERO)
#   operand_a = -13
#   operand_b = 10
# 
# 
# Reading back the same register locations written...
# Read from register location 0: 
#   opcode = x ()
#   operand_a = x
#   operand_b = x
#   res = x
# Test FAILED
#   Expected Result: 0
#   Actual Result: x
# Read from register location 1: 
#   opcode = 1 (SQUARE)
#   operand_a = 4
#   operand_b = 1
#   res = 16
# Test FAILED
#   Expected Result: 0
#   Actual Result: 16
# Read from register location 2: 
#   opcode = 5 (MULT)
#   operand_a = -13
#   operand_b = 13
#   res = -169
# Test PASSED
#   Expected Result: -169
#   Actual Result: -169
# Read from register location 3: 
#   opcode = 1 (SQUARE)
#   operand_a = -11
#   operand_b = 2
#   res = 121
# Test FAILED
#   Expected Result: 0
#   Actual Result: 121
# Read from register location 4: 
#   opcode = 5 (MULT)
#   operand_a = 13
#   operand_b = 6
#   res = 78
# Test PASSED
#   Expected Result: 78
#   Actual Result: 78
# Read from register location 5: 
#   opcode = 1 (SQUARE)
#   operand_a = 13
#   operand_b = 12
#   res = 169
# Test FAILED
#   Expected Result: 0
#   Actual Result: 169
# Read from register location 6: 
#   opcode = 2 (PASSB)
#   operand_a = -10
#   operand_b = 5
#   res = 5
# Test PASSED
#   Expected Result: 5
#   Actual Result: 5
# Read from register location 7: 
#   opcode = 2 (PASSB)
#   operand_a = 5
#   operand_b = 7
#   res = 7
# Test PASSED
#   Expected Result: 7
#   Actual Result: 7
# Read from register location 8: 
#   opcode = 6 (DIV)
#   operand_a = 15
#   operand_b = 2
#   res = 7
# Test PASSED
#   Expected Result: 7
#   Actual Result: 7
# Read from register location 9: 
#   opcode = 4 (SUB)
#   operand_a = -8
#   operand_b = 5
#   res = -13
# Test PASSED
#   Expected Result: -13
#   Actual Result: -13
# Read from register location 10: 
#   opcode = 5 (MULT)
#   operand_a = -3
#   operand_b = 13
#   res = -39
# Test PASSED
#   Expected Result: -39
#   Actual Result: -39
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Total Errors : 4
# 
# Test run_test5.bat failed
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(97)
#    Time: 266 ns  Iteration: 1  Instance: /top/test
# End time: 19:08:56 on Apr 24,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 1
